"""

    1. 해시 맵 (Hash Map)
    해시 맵은 키-값 쌍(Key-Value Pair)으로 데이터를 저장하는 자료구조입니다. 키를 통해 데이터를 매우 빠르게 검색, 삽입, 삭제할 수 있습니다. 해시 맵은 내부적으로 해싱(Hashing)이라는 기법을 사용하는데, 해시 합수(Hash Function)를 통해 키를 해시 값으로 변환하고, 이 해시 값을 인덱스로 사용해 배열에 데이터를 저장합니다. 
    
        - 해싱(Hashing) : 키를 입력으로 받아 고정된 크기의 해시 값을 반환하는 함수입니다.
        - 충돌(Collision) : 서로 (다른 키가 같은 해시 값을 반환하는 경우를 말합니다. 충돌을 처리하는 방법으로는 체이닝(Chaining)과 오픈 어드레싱(Open Addressing)이 있습니다. 

        장점 : 
            - 평균적으로 O(1)의 시간 복잡도로 데이터에 접근할 수 있습니다. 
            - 다양한 데이터 타입을 키로 사용할 수 있습니다.
        단점 :
            - 해시 함수가 비효율적일 경우 충돌이 많이 발생할 수 있습니다. 
            - 해시 맵의 메모리 사용량은 배열보다 클 수 있습니다. 

    2. 해시 셋 (Hash Set)
    해시 셋은 중복을 허용하지 않는 데이터 집합을 저장하는 자료구조입니다. 해시 셋은 내부적으로 해시 맵을 사용하여 구현되며, 각 요소가 고유한 해시 값을 가지도록 관리합니다. 해시 셋을 사용하면 특정 요소가 집합에 있는지 여부를 빠르게 확인할 수 있습니다.  

        특징 : 
            - 중복 요소를 호용하지 않습니다. 
            - 삽입, 삭제, 탐색이 평균적으로 O(1)의 시간 복잡도를 가집니다. 
            - 요소들의 순서는 보장되지 않습니다. 

"""

## 1. 해시 맵 예제 


## 2. 해시 셋 예제 


"""

    체이닝과 오픈 어드레싱은 해시 충돌을 처리하는 두 가지 주요 방법입니다. 

    
"""